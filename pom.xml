<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>nl.hofmanr.jms.client</groupId>
  <artifactId>jmsRestClient</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>jmsRestClient</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>
  <packaging>war</packaging>

  <properties>
    <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <version.java>11</version.java>
    <version.javaee>9.1.0</version.javaee>
    <version.swagger>1.5.9</version.swagger>
    <!-- Swagger plugins -->
    <version.swagger.plugin>3.1.4</version.swagger.plugin>
  </properties>

<!--  <repositories>-->
<!--    <repository>-->
<!--      <id>central</id>-->
<!--      <name>Central Repository</name>-->
<!--      <url>https://repo1.maven.org/maven2</url>-->
<!--      <layout>default</layout>-->
<!--      <snapshots>-->
<!--        <enabled>false</enabled>-->
<!--      </snapshots>-->
<!--    </repository>-->
<!--  </repositories>-->

  <dependencies>
    <!-- Nodig voor JMS -->
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>${version.javaee}</version>
      <scope>provided</scope>
    </dependency>

    <!-- e.g. Jersey Core -->
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-web-api</artifactId>
      <version>${version.javaee}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>${version.swagger}</version>
    </dependency>

    <dependency>
      <groupId>com.github.eirslett</groupId>
      <artifactId>frontend-maven-plugin</artifactId>
      <version>1.11.3</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>2.10.2</version>
    </dependency>

  </dependencies>

  <build>
    <finalName>jmsRestClient</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <source>${version.java}</source>
            <target>${version.java}</target>
            <compilerArguments>
              <endorseddirs>${endorsed.dir}</endorseddirs>
            </compilerArguments>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>

      <!-- Copy the frontend build directory to the target directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>Copy frontend build to target</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/resources</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/ts/frontend/build</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>${basedir}/target/resources</directory>
              <filtering>false</filtering>
<!--              <excludes>-->
<!--                <exclude>manifest.json</exclude>-->
<!--              </excludes>-->
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!-- see https://github.com/kongchen/swagger-maven-plugin -->
      <plugin>
        <groupId>com.github.kongchen</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <version>${version.swagger.plugin}</version>
        <configuration>
          <apiSources>
            <apiSource>
              <springmvc>false</springmvc>
              <locations>nl.hofmanr.jms.client</locations>
              <schemes>http,https</schemes>
              <host>localhost:8080</host>
              <basePath>/jmsRestClient/api</basePath>
              <outputFormats>yaml,json</outputFormats>
              <info>
                <title>JMS Client APIs</title>
                <version>1.0.0</version>
                <description>JMS Rest API exposes the Java EE back-end to the front-end</description>
                <contact>
<!--                  <email>email</email>-->
                  <name>Rinus Hofman</name>
                  <url>http://localhost:8080</url>
                </contact>
                <license>
                  <url>http://www.license.com</url>
                  <name>License name</name>
                </license>
              </info>
              <swaggerDirectory>${basedir}/src/main/webapp</swaggerDirectory>
              <attachSwaggerArtifact>true</attachSwaggerArtifact>
            </apiSource>
          </apiSources>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
<!--        <dependencies>-->
<!--          &lt;!&ndash; Adding dependency to swagger-hibernate-validations to enable the BeanValidator as a custom model converter &ndash;&gt;-->
<!--          <dependency>-->
<!--            <groupId>io.swagger</groupId>-->
<!--            <artifactId>swagger-hibernate-validations</artifactId>-->
<!--            <version>${version.swagger}</version>-->
<!--          </dependency>-->
<!--        </dependencies>-->
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- use: mvn compile -Pprod -->
      <id>prod</id>
      <build>
        <plugins>
          <!--
          Build the react application; the output can be found in the 'ts/frontend/build' directory
             1. used for local installation of node and npm
             2. to install dependencies with npm install
             3. building the application
           -->
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.11.3</version>
            <configuration>
              <nodeVersion>v15.12.0</nodeVersion>
              <npmVersion>7.11.1</npmVersion>
              <workingDirectory>src/main/ts/frontend</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>Install node and npm locally to the project</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
              </execution>
              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
              </execution>
              <execution>
                <id>Build frontend</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <configuration>
                  <arguments>run build</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
